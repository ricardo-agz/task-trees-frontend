{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Desktop\\\\School\\\\Research\\\\NLP\\\\WikiHow\\\\visualizer\\\\src\\\\views\\\\ScrollNode.js\",\n    _s = $RefreshSig$();\n\nimport { setSearch } from \"../application/actions/Search\";\nimport { goBack, selectChild, setCurrNode } from \"../application/actions/Graph\";\nimport { connect } from \"react-redux\";\nimport React, { useEffect } from \"react\";\nimport { useVisibilityHook } from 'react-observer-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ScrollNode(props) {\n  _s();\n\n  const {\n    setElement,\n    isVisible\n  } = useVisibilityHook();\n  useEffect(() => {\n    if (isVisible) {// ...Logics/API call can trigger by watching isVisible property\n    }\n  }, [isVisible]);\n\n  function handleCallNode(node) {\n    props.setCurrNode(format(node));\n  }\n\n  const format = s => {\n    if (typeof s !== 'string') return '';\n    s = s.toLowerCase();\n\n    if (s.charAt(s.length - 1) === \".\") {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    } else {\n      return s.charAt(0).toUpperCase() + s.slice(1) + \".\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setElement,\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"rgb(6,98,191)\",\n        padding: 15,\n        borderRadius: 50,\n        color: \"white\",\n        maxWidth: \"300px\",\n        // display: \"inline-block\",\n        display: \"flex\",\n        alignItems: \"center\",\n        flexGrow: 0,\n        flexShrink: 0,\n        flexWrap: \"no-wrap\",\n        marginLeft: 5,\n        marginRight: 5\n      },\n      onClick: () => handleCallNode(props.node.goal),\n      children: props.node.goal.length > 30 ? props.node.goal.slice(0, 30) + \"...\" : props.node.goal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n/* Redux */\n\n\n_s(ScrollNode, \"7cmUtJVAXfHxa/+per+hN0MPKRw=\", false, function () {\n  return [useVisibilityHook];\n});\n\n_c = ScrollNode;\n\nconst mapStateToProps = state => {\n  return {\n    currNode: state.graphReducer.currNode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrNode: search => dispatch(setCurrNode(search))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollNode);\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollNode\");","map":{"version":3,"sources":["C:/Users/Ricky/Desktop/School/Research/NLP/WikiHow/visualizer/src/views/ScrollNode.js"],"names":["setSearch","goBack","selectChild","setCurrNode","connect","React","useEffect","useVisibilityHook","ScrollNode","props","setElement","isVisible","handleCallNode","node","format","s","toLowerCase","charAt","length","toUpperCase","slice","backgroundColor","padding","borderRadius","color","maxWidth","display","alignItems","flexGrow","flexShrink","flexWrap","marginLeft","marginRight","goal","mapStateToProps","state","currNode","graphReducer","mapDispatchToProps","dispatch","search"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,+BAAxB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,WAA7B,QAA+C,8BAA/C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BJ,iBAAiB,EAAnD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,SAAJ,EAAe,CACf;AACC;AACF,GAJQ,EAIN,CAACA,SAAD,CAJM,CAAT;;AAMA,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BJ,IAAAA,KAAK,CAACN,WAAN,CAAkBW,MAAM,CAACD,IAAD,CAAxB;AACD;;AAED,QAAMC,MAAM,GAAIC,CAAD,IAAO;AACpB,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,EAAP;AAC3BA,IAAAA,CAAC,GAAIA,CAAC,CAACC,WAAF,EAAL;;AACA,QAAID,CAAC,CAACE,MAAF,CAASF,CAAC,CAACG,MAAF,GAAW,CAApB,MAA2B,GAA/B,EAAoC;AAClC,aAAOH,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYE,WAAZ,KAA4BJ,CAAC,CAACK,KAAF,CAAQ,CAAR,CAAnC;AACD,KAFD,MAEO;AACL,aAAOL,CAAC,CAACE,MAAF,CAAS,CAAT,EAAYE,WAAZ,KAA4BJ,CAAC,CAACK,KAAF,CAAQ,CAAR,CAA5B,GAAyC,GAAhD;AACD;AACF,GARD;;AAUA,sBACE;AAAK,IAAA,GAAG,EAAEV,UAAV;AAAA,cACGC,SAAS,iBACR;AACE,MAAA,KAAK,EAAE;AACLU,QAAAA,eAAe,EAAE,eADZ;AAELC,QAAAA,OAAO,EAAE,EAFJ;AAEQC,QAAAA,YAAY,EAAE,EAFtB;AAE0BC,QAAAA,KAAK,EAAE,OAFjC;AAGLC,QAAAA,QAAQ,EAAE,OAHL;AAIL;AACAC,QAAAA,OAAO,EAAE,MALJ;AAMLC,QAAAA,UAAU,EAAE,QANP;AAOLC,QAAAA,QAAQ,EAAE,CAPL;AAQLC,QAAAA,UAAU,EAAE,CARP;AASLC,QAAAA,QAAQ,EAAE,SATL;AAULC,QAAAA,UAAU,EAAE,CAVP;AAWLC,QAAAA,WAAW,EAAE;AAXR,OADT;AAcE,MAAA,OAAO,EAAE,MAAMpB,cAAc,CAACH,KAAK,CAACI,IAAN,CAAWoB,IAAZ,CAd/B;AAAA,gBAeExB,KAAK,CAACI,IAAN,CAAWoB,IAAX,CAAgBf,MAAhB,GAAyB,EAAzB,GAA8BT,KAAK,CAACI,IAAN,CAAWoB,IAAX,CAAgBb,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,IAA+B,KAA7D,GAAqEX,KAAK,CAACI,IAAN,CAAWoB;AAflF;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;AAED;;;GA/CSzB,U;UAC2BD,iB;;;KAD3BC,U;;AAgDT,MAAM0B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,QAAQ,EAAED,KAAK,CAACE,YAAN,CAAmBD;AADxB,GAAP;AAGD,CAJD;;AAKA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpC,IAAAA,WAAW,EAAGqC,MAAD,IAAYD,QAAQ,CAACpC,WAAW,CAACqC,MAAD,CAAZ;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAepC,OAAO,CAAC8B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C9B,UAA7C,CAAf","sourcesContent":["import {setSearch} from \"../application/actions/Search\";\r\nimport {goBack, selectChild, setCurrNode} from \"../application/actions/Graph\";\r\nimport {connect} from \"react-redux\";\r\nimport React, {useEffect} from \"react\";\r\nimport { useVisibilityHook } from 'react-observer-api';\r\n\r\nfunction ScrollNode(props) {\r\n  const { setElement, isVisible } = useVisibilityHook();\r\n\r\n  useEffect(() => {\r\n    if (isVisible) {\r\n    // ...Logics/API call can trigger by watching isVisible property\r\n    }\r\n  }, [isVisible])\r\n\r\n  function handleCallNode(node) {\r\n    props.setCurrNode(format(node))\r\n  }\r\n\r\n  const format = (s) => {\r\n    if (typeof s !== 'string') return ''\r\n    s =  s.toLowerCase()\r\n    if (s.charAt(s.length - 1) === \".\") {\r\n      return s.charAt(0).toUpperCase() + s.slice(1)\r\n    } else {\r\n      return s.charAt(0).toUpperCase() + s.slice(1) + \".\"\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div ref={setElement}>\r\n      {isVisible && (\r\n        <div\r\n          style={{\r\n            backgroundColor: \"rgb(6,98,191)\",\r\n            padding: 15, borderRadius: 50, color: \"white\",\r\n            maxWidth: \"300px\",\r\n            // display: \"inline-block\",\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            flexGrow: 0,\r\n            flexShrink: 0,\r\n            flexWrap: \"no-wrap\",\r\n            marginLeft: 5,\r\n            marginRight: 5\r\n          }}\r\n          onClick={() => handleCallNode(props.node.goal)}\r\n        >{props.node.goal.length > 30 ? props.node.goal.slice(0, 30) + \"...\" : props.node.goal}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n/* Redux */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currNode: state.graphReducer.currNode,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setCurrNode: (search) => dispatch(setCurrNode(search)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ScrollNode)\r\n"]},"metadata":{},"sourceType":"module"}