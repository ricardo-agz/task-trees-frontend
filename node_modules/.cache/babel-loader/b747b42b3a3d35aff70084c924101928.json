{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Desktop\\\\School\\\\Research\\\\NLP\\\\WikiHow\\\\visualizer\\\\src\\\\views\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { connect } from \"react-redux\";\nimport \"./Styles.css\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport { setSearch } from \"../application/actions/Search\";\nimport { setCurrNode } from \"../application/actions/Graph\";\nimport { setDisplay } from \"../application/actions/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n\n  const format = s => {\n    if (typeof s !== 'string') return '';\n    s = s.toLowerCase();\n\n    if (s.charAt(s.length - 1) === \".\") {\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    } else {\n      return s.charAt(0).toUpperCase() + s.slice(1) + \".\";\n    }\n  };\n\n  function handleSearch() {\n    props.callSearch(format(search));\n    props.setCurrNode(format(search));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingBottom: 10,\n      backgroundColor: \"#383838\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginBottom: 10,\n        alignItems: \"center\",\n        height: 25\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"white\"\n        },\n        className: \"menuButton\",\n        onClick: () => props.setDisplay(\"goal-step\"),\n        children: \"Goal-Step\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"white\",\n          marginLeft: 10,\n          marginRight: 10\n        },\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"white\"\n        },\n        className: \"menuButton\",\n        onClick: () => props.setDisplay(\"tree\"),\n        children: \"Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"searchInput\",\n          onChange: e => setSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchButton\",\n        onClick: () => {\n          handleSearch();\n        },\n        children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n          style: {\n            color: \"white\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 25,\n            height: 25,\n            borderRadius: 25,\n            backgroundColor: \"white\",\n            borderColor: \"black\",\n            borderWidth: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 25,\n            height: 25,\n            borderRadius: 25,\n            backgroundColor: \"white\",\n            borderColor: \"gray\",\n            borderWidth: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n/* Redux */\n\n\n_s(Search, \"42GASUL8pX2/N6Oh5HTh0GvQEF0=\");\n\n_c = Search;\n\nconst mapStateToProps = state => {\n  return {\n    search: state.searchReducer.search,\n    currNode: state.graphReducer.currNode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    callSearch: search => dispatch(setSearch(search)),\n    setCurrNode: search => dispatch(setCurrNode(search)),\n    setDisplay: display => dispatch(setDisplay(display))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["C:/Users/Ricky/Desktop/School/Research/NLP/WikiHow/visualizer/src/views/Search.js"],"names":["React","useState","SearchIcon","connect","ButtonGroup","Button","setSearch","setCurrNode","setDisplay","Search","props","search","format","s","toLowerCase","charAt","length","toUpperCase","slice","handleSearch","callSearch","paddingBottom","backgroundColor","display","justifyContent","marginBottom","alignItems","height","color","marginLeft","marginRight","e","target","value","width","borderRadius","borderColor","borderWidth","mapStateToProps","state","searchReducer","currNode","graphReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {connect} from \"react-redux\";\r\nimport \"./Styles.css\"\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {setSearch} from \"../application/actions/Search\";\r\nimport {setCurrNode} from \"../application/actions/Graph\";\r\nimport {setDisplay} from \"../application/actions/Nav\";\r\n\r\nfunction Search(props) {\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const format = (s) => {\r\n    if (typeof s !== 'string') return ''\r\n    s =  s.toLowerCase()\r\n    if (s.charAt(s.length - 1) === \".\") {\r\n      return s.charAt(0).toUpperCase() + s.slice(1)\r\n    } else {\r\n      return s.charAt(0).toUpperCase() + s.slice(1) + \".\"\r\n    }\r\n  }\r\n\r\n  function handleSearch() {\r\n\r\n    props.callSearch(format(search));\r\n    props.setCurrNode(format(search));\r\n  }\r\n\r\n  return (\r\n  <div style={{paddingBottom: 10, backgroundColor: \"#383838\"}}>\r\n    <div style={{display: \"flex\", justifyContent: \"center\", marginBottom: 10, alignItems: \"center\", height: 25}}>\r\n      <div style={{color: \"white\"}} className={\"menuButton\"}\r\n        onClick={() => props.setDisplay(\"goal-step\")}\r\n      >Goal-Step</div>\r\n      <div style={{color: \"white\", marginLeft: 10, marginRight: 10}}>|</div>\r\n      <div style={{color: \"white\"}} className={\"menuButton\"}\r\n        onClick={() => props.setDisplay(\"tree\")}\r\n      >Graph</div>\r\n    </div>\r\n    <div style={{display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n      <div className={\"searchDiv\"}>\r\n        <input type=\"text\" name=\"name\" className={\"searchInput\"} onChange={(e) => setSearch(e.target.value)}/>\r\n      </div>\r\n\r\n      <div className={\"searchButton\"} onClick={() => {handleSearch()}}>\r\n        <SearchIcon style={{color: \"white\"}}/>\r\n      </div>\r\n\r\n      {/*<div style={{flex: 1}}/>*/}\r\n\r\n      <div>\r\n        <div style={{width: 25, height: 25, borderRadius: 25, backgroundColor: \"white\", borderColor: \"black\", borderWidth: 1}}>\r\n        </div>\r\n        <div style={{width: 25, height: 25, borderRadius: 25, backgroundColor: \"white\", borderColor: \"gray\", borderWidth: 1}}></div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n/* Redux */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.searchReducer.search,\r\n    currNode: state.graphReducer.currNode\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    callSearch: (search) => dispatch(setSearch(search)),\r\n    setCurrNode: (search) => dispatch(setCurrNode(search)),\r\n    setDisplay: (display) => dispatch(setDisplay(display))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search)\r\n"]},"metadata":{},"sourceType":"module"}