{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Desktop\\\\School\\\\Research\\\\NLP\\\\WikiHow\\\\visualizer\\\\src\\\\views\\\\View.js\";\nimport React from \"react\";\nimport { setSearch } from \"../application/actions/Search\";\nimport { goBack, selectChild, setCurrNode } from \"../application/actions/Graph\";\nimport { connect } from \"react-redux\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport GridLines from 'react-gridlines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction View(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#222222\",\n      height: \"100%\",\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(GridLines, {\n      className: \"grid-area\",\n      cellWidth: 60,\n      strokeWidth: 2,\n      cellWidth2: 12,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Gridlines demo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flex: 1,\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: [props.prevNodeStack.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => props.goBack(),\n          className: \"backButton\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), props.currNode !== null && typeof props.currNode !== \"string\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: \"#2b56d2\",\n            padding: 15,\n            borderRadius: 50,\n            color: \"white\"\n          },\n          children: props.currNode == null ? \"null\" : props.currNode.goal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: props.currNode !== null && typeof props.currNode !== \"string\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.currNode.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  backgroundColor: \"#2b56d2\",\n                  padding: 15,\n                  borderRadius: 50,\n                  color: \"white\",\n                  margin: 10\n                },\n                children: step.goal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this), step.steps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"plusButton\",\n                onClick: () => props.selectChild(index),\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                  style: {\n                    color: \"white\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/* Redux */\n\n\n_c = View;\n\nconst mapStateToProps = state => {\n  return {\n    search: state.searchReducer.search,\n    currNode: state.graphReducer.currNode,\n    prevNodeStack: state.graphReducer.prevNodeStack\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    callSearch: search => dispatch(setSearch(search)),\n    setCurrNode: search => dispatch(setCurrNode(search)),\n    selectChild: i => dispatch(selectChild(i)),\n    goBack: () => dispatch(goBack())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/Ricky/Desktop/School/Research/NLP/WikiHow/visualizer/src/views/View.js"],"names":["React","setSearch","goBack","selectChild","setCurrNode","connect","AddIcon","ChevronLeftIcon","GridLines","View","props","backgroundColor","height","flex","display","alignItems","justifyContent","prevNodeStack","length","color","currNode","padding","borderRadius","goal","steps","map","step","index","margin","mapStateToProps","state","search","searchReducer","graphReducer","mapDispatchToProps","dispatch","callSearch","i"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {setSearch} from \"../application/actions/Search\";\r\nimport {goBack, selectChild, setCurrNode} from \"../application/actions/Graph\";\r\nimport {connect} from \"react-redux\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport GridLines from 'react-gridlines';\r\n\r\nfunction View(props) {\r\n  return (\r\n    <div style={{backgroundColor: \"#222222\", height: \"100%\", flex: 1}}>\r\n\r\n      <GridLines className=\"grid-area\" cellWidth={60} strokeWidth={2} cellWidth2={12}>\r\n        <h1>Gridlines demo</h1>\r\n      </GridLines>\r\n\r\n      <div style={{display: \"flex\", flex: 1, height: \"100%\"}}>\r\n\r\n\r\n\r\n        <div style={{flex: 1, display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n\r\n          {props.prevNodeStack.length > 0 &&\r\n          <div\r\n            onClick={() => props.goBack()}\r\n            className={\"backButton\"}\r\n          >\r\n            <ChevronLeftIcon style={{color: \"white\"}}/>\r\n          </div>\r\n          }\r\n\r\n\r\n          {props.currNode !== null && typeof props.currNode !== \"string\" &&\r\n            <div\r\n              style={{backgroundColor: \"#2b56d2\", padding: 15, borderRadius: 50, color: \"white\"}}\r\n            >{props.currNode == null ? \"null\" : props.currNode.goal}</div>\r\n          }\r\n        </div>\r\n\r\n        <div style={{flex: 1, display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n          <div>{\r\n            props.currNode !== null && typeof(props.currNode) !== \"string\" &&\r\n            <div>{props.currNode.steps.map((step, index) => (\r\n              <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                <div\r\n                  style={{backgroundColor: \"#2b56d2\", padding: 15, borderRadius: 50, color: \"white\", margin: 10}}\r\n                >{step.goal}</div>\r\n\r\n                {step.steps.length > 0 &&\r\n                  <div\r\n                    className={\"plusButton\"}\r\n                    onClick={() => props.selectChild(index)}\r\n                  >\r\n                    <AddIcon style={{color: \"white\"}}/>\r\n                  </div>\r\n                }\r\n              </div>\r\n            ))}</div>\r\n          }</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n/* Redux */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.searchReducer.search,\r\n    currNode: state.graphReducer.currNode,\r\n    prevNodeStack: state.graphReducer.prevNodeStack,\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    callSearch: (search) => dispatch(setSearch(search)),\r\n    setCurrNode: (search) => dispatch(setCurrNode(search)),\r\n    selectChild: (i) => dispatch(selectChild(i)),\r\n    goBack: () => dispatch(goBack())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View)\r\n"]},"metadata":{},"sourceType":"module"}