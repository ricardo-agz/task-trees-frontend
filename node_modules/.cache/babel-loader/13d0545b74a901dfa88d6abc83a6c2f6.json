{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricky\\\\Desktop\\\\School\\\\Research\\\\NLP\\\\WikiHow\\\\visualizer\\\\src\\\\views\\\\View.js\";\nimport React from \"react\";\nimport { setSearch } from \"../application/actions/Search\";\nimport { setCurrNode } from \"../application/actions/Graph\";\nimport { connect } from \"react-redux\";\nimport AddIcon from '@material-ui/icons/Add';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport GridLines from 'react-gridlines';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction View(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: \"#f1f1f1\",\n      height: \"100%\",\n      flex: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(GridLines, {\n      cellWidth: 60,\n      strokeWidth: 2,\n      cellWidth2: 12,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          flex: 1,\n          height: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"backButton\",\n            children: /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), props.currNode !== null && typeof props.currNode !== \"string\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              backgroundColor: \"#2b56d2\",\n              padding: 15,\n              borderRadius: 50,\n              color: \"white\"\n            },\n            children: props.currNode == null ? \"null\" : props.currNode.goal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.currNode !== null && typeof props.currNode !== \"string\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: props.currNode.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    backgroundColor: \"#2b56d2\",\n                    padding: 15,\n                    borderRadius: 50,\n                    color: \"white\",\n                    margin: 10\n                  },\n                  children: step.goal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"plusButton\",\n                  children: /*#__PURE__*/_jsxDEV(AddIcon, {\n                    style: {\n                      color: \"white\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n/* Redux */\n\n\n_c = View;\n\nconst mapStateToProps = state => {\n  return {\n    search: state.searchReducer.search,\n    currNode: state.graphReducer.currNode\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    callSearch: search => dispatch(setSearch(search)),\n    setCurrNode: search => dispatch(setCurrNode(search))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(View);\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/Ricky/Desktop/School/Research/NLP/WikiHow/visualizer/src/views/View.js"],"names":["React","setSearch","setCurrNode","connect","AddIcon","ChevronLeftIcon","GridLines","View","props","backgroundColor","height","flex","display","alignItems","justifyContent","color","currNode","padding","borderRadius","goal","steps","map","step","index","margin","mapStateToProps","state","search","searchReducer","graphReducer","mapDispatchToProps","dispatch","callSearch"],"mappings":"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","sourcesContent":["import React from \"react\"\r\nimport {setSearch} from \"../application/actions/Search\";\r\nimport {setCurrNode} from \"../application/actions/Graph\";\r\nimport {connect} from \"react-redux\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport GridLines from 'react-gridlines';\r\n\r\nfunction View(props) {\r\n  return (\r\n    <div style={{backgroundColor: \"#f1f1f1\", height: \"100%\", flex: 1}}>\r\n      <GridLines cellWidth={60} strokeWidth={2} cellWidth2={12}>\r\n        <div style={{display: \"flex\", flex: 1, height: \"100%\"}}>\r\n\r\n\r\n\r\n          <div style={{flex: 1, display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n            <div className={\"backButton\"}>\r\n              <ChevronLeftIcon style={{color: \"white\"}}/>\r\n            </div>\r\n\r\n            {props.currNode !== null && typeof props.currNode !== \"string\" &&\r\n            <div\r\n              style={{backgroundColor: \"#2b56d2\", padding: 15, borderRadius: 50, color: \"white\"}}\r\n            >{props.currNode == null ? \"null\" : props.currNode.goal}</div>\r\n            }\r\n          </div>\r\n\r\n          <div style={{flex: 1, display: \"flex\", alignItems: \"center\", justifyContent: \"center\"}}>\r\n            <div>{\r\n              props.currNode !== null && typeof(props.currNode) !== \"string\" &&\r\n              <div>{props.currNode.steps.map((step, index) => (\r\n                <div style={{display: \"flex\", alignItems: \"center\"}}>\r\n                  <div\r\n                    style={{backgroundColor: \"#2b56d2\", padding: 15, borderRadius: 50, color: \"white\", margin: 10}}\r\n                  >{step.goal}</div>\r\n\r\n                  <div\r\n                    className={\"plusButton\"}\r\n                  >\r\n                    <AddIcon style={{color: \"white\"}}/>\r\n                  </div>\r\n                </div>\r\n              ))}</div>\r\n            }</div>\r\n          </div>\r\n        </div>\r\n      </GridLines>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n/* Redux */\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    search: state.searchReducer.search,\r\n    currNode: state.graphReducer.currNode\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    callSearch: (search) => dispatch(setSearch(search)),\r\n    setCurrNode: (search) => dispatch(setCurrNode(search))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(View)\r\n"]},"metadata":{},"sourceType":"module"}